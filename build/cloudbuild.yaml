steps:
  ###########################
  # CI Pipeline
  ###########################
  - name: "ghcr.io/opentofu/opentofu:1.10.1"
    id: Retrieve environments metadata
    entrypoint: /bin/bash
    args:
      - -c
      - |
        _build_env=${BRANCH_NAME}
        if [ "${_build_env}" = "main" ]; then
          _build_env=prd
        fi

        _env_path="environments/${_build_env}"

        cd ${_DEPLOYMENT_CONFIG_PATH}

        echo "########################################"
        echo "# Init tofu state for '${_build_env}'"
        echo "########################################"

        tofu init \
          -var-file="${_env_path}/terraform.tfvars" \
          -backend-config="bucket=${_TOFU_BACKEND_BUCKET}" \
          -backend-config="prefix=${_TOFU_BACKEND_PREFIX}/${_build_env}"

        tofu output
        tofu output app_env >  /workspace/APP_ENV.txt
        tofu output app_image_uri > /workspace/APP_IMAGE_URI.txt
        tofu output continuous_deployment_trigger > /workspace/CLOUDBUILD_CD_TRIGGER.txt

  - name: "gcr.io/cloud-builders/gcloud-slim"
    id: "Run build steps"
    entrypoint: "/bin/bash"
    args:
      - -c
      - |
        _app_image_uri=$(cat /workspace/APP_IMAGE_URI.txt | tr -d '"')
        _app_env=$(cat /workspace/APP_ENV.txt | tr -d '"')

        gcloud builds submit ${_BUILD_PATH} \
          --config=${_BUILD_PATH}/build/cloudbuild.${_BUILDER}.yaml \
          --region=${LOCATION} \
          --service-account=${SERVICE_ACCOUNT} \
          --substitutions=_BUILD_PATH=${_BUILD_PATH},_DOCKERFILE_PATH=${_DOCKERFILE_PATH},_BUILD_COMMIT=$COMMIT_SHA,_APP_ENV=${_app_env},_APP_IMAGE_URI=${_app_image_uri},_BUILDPACK_BUILDER=${_BUILDPACK_BUILDER}

  - name: "gcr.io/cloud-builders/gcloud-slim"
    id: "Run deloyment steps"
    entrypoint: "/bin/bash"
    args:
      - -c
      - |
        _cloudbuild_cd_trigger=$(cat /workspace/CLOUDBUILD_CD_TRIGGER.txt | tr -d '"')

        gcloud builds triggers run ${_cloudbuild_cd_trigger} \
          --branch=${BRANCH_NAME} \
          --region=${LOCATION} \
          --substitutions=_DEPLOYMENT_CONFIG_PATH=${_DEPLOYMENT_CONFIG_PATH},_TOFU_BACKEND_BUCKET=${_TOFU_BACKEND_BUCKET},_TOFU_BACKEND_PREFIX=${_TOFU_BACKEND_PREFIX}

substitutions:
  # Build config
  _BUILDER: "buildpack" #TODO: define build method wheter using "docker" or "buildpack"
  _BUILD_PATH: "." #TODO: define path of source project to build
  _DEPLOYMENT_CONFIG_PATH: "./deployments" #TODO: define this template location within project structure
  _DOCKERFILE_PATH: ${_DEPLOYMENT_CONFIG_PATH}/build/Dockerfile #TODO: define dockerfile location
  _BUILDPACK_BUILDER: "gcr.io/buildpacks/builder:latest" #TODO: define builder for buildpack

  _TOFU_BACKEND_BUCKET: "khhini-devops-2705-bkt" #TODO: define cloud storage bucket that used as tofu backend
  _TOFU_BACKEND_PREFIX: "tofu/sample-app" #TODO: define tofu state prefix whithin bucket

options:
  logging: CLOUD_LOGGING_ONLY
  dynamicSubstitutions: true
